Automatically generated by Mendeley Desktop 1.17.6
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@inproceedings{Clear,
abstract = {Context: Global Software Engineering (GSE) has become the predominant form of software development for global companies and has given rise to a demand for students trained in GSE. In response, universities are developing courses and curricula around GSE and researchers have begun to disseminate studies of these new approaches. Problem: GSE differs from most other computer science fields, however, in that practice is inseparable from theory. As a result, educators looking to create GSE courses face a daunting task: integrating global practice into the local classroom. Aim: This study aims to ameliorate the very difficult task of teaching GSE by delineating the challenges and providing some recommendations for overcoming them. Method: To meet our aims we pose two research questions ("When teaching GSE to students in Higher Education, what are the (a) challenges, and (b) recommendations for addressing them") and then conduct a systematic literature review (SLR) to determine the answers to these questions. Our SLR follows a carefully designed and validated protocol. Results: We found 82 papers that addressed our research questions. Our findings indicate that in addition to the challenges posed by GSE in general, particular problems arise in educational situations. The majority of these challenges fall into the "global distance" category, though teamwork challenges and people issues (such as trust) also commonly arise. Organizational differences between institutions, differing skill sets between students in different locations, and varying cultural work norms, for example, all operate within educational settings in quite different ways than in professional development teams. Integrating cultural training, conducting teamwork exercises to build trust, and instructor monitoring of team communication are all examples of techniques that have been used successfully by educators according to our review Conclusion: Despite the severity of the challenges in GSE education, many institutions have successfully developed courses and curricula targeting GSE. Indeed, for each of the challenges we have identified in the literature there are numerous recommendations for overcoming them. Instructors can use the recommendations given in this study as a starting point to running successful GSE courses. {\textcopyright} 2015 ACM.},
author = {Clear, Tony T.a and Daniels, M.b Mats and Beecham, Sarah S.c and McDermott, Roger R.d and Barr, John J.e and Oudshoorn, M.f Michael and Savickaite, A.g Airina and Noll, J.c John and Daniels, M.b Mats and McDermott, Roger R.d and Oudshoorn, M.f Michael and Savickaite, A.g Airina and Noll, J.c John and Mahmood, Sajjad and Anwer, Sajid and Alshayeb, Mohammad and Clear, Tony T.a and Daniels, M.b Mats and Beecham, Sarah S.c and McDermott, Roger R.d and Barr, John J.e and Oudshoorn, M.f Michael and Savickaite, A.g Airina and Noll, J.c John and Yin, Robert K and Yang, Chen and Liang, Peng and Avgeriou, Paris},
booktitle = {ITiCSE-WGP 2015 - Proceedings of the 2015 ITiCSE Conference on Working Group Reports},
doi = {10.1145/2858796.2858797},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/Clear et al. - 2015 - Challenges and recommendations for the design and conduct of global software engineering courses A systematic revi.pdf:pdf},
isbn = {978-1-4503-4146-2},
issn = {01641212},
keywords = {Agile development,Architecting approach,Software architecture,TODO,allocation,capstone,global software development,global software engineering,international collaboration,open ended group project,systematic literature review,task,teaching and learning,work distribution},
mendeley-tags = {TODO},
pages = {1--39},
pmid = {15283718},
title = {{Challenges and recommendations for the design and conduct of global software engineering courses: A systematic review}},
url = {http://dx.doi.org/10.1145/2858796.2858797 http://dx.doi.org/10.1016/j.jss.2015.09.028{\%}5Cnhttps://www.scopus.com/inward/record.uri?eid=2-s2.0-84964794770{\&}partnerID=40{\&}md5=095842543262ad950b1c4e3e48aa2868{\%}5Cnhttp://doi.acm.org/10.1145/2858796.2858797},
volume = {111},
year = {2015}
}
@article{Mockus,
abstract = {According to its proponents, open source style software development has the capacity to compete successfully, and perhaps in many cases displace, traditional commercial development methods. In order to begin investigating such claims, we examine the development process of a major open source application, the Apache web server. By using email archives of source code change history and problem reports we quantify aspects of developer participation, core team size, code ownership, productivity, defect density, and problem resolution interval for this OSS project. This analysis reveals a unique process, which performs well on important measures. We conclude that hybrid forms of development that borrow the most effective techniques from both the OSS and commercial worlds may lead to high performance software processes.},
annote = {OBS! Den {\"{a}}r skriven 2000...
- Se r{\"{o}}dmarkerad text f{\"{o}}r guldkorn
- De l{\"{a}}gger bl.a. grunden f{\"{o}}r att kombinera komersiell utveckling med OSS
- Gr{\"{o}}nmarkerad kan vara bra att relatera till
* De som INTE {\"{a}}r core-developers {\"{a}}r mer intresserade av att rapportera problem {\"{a}}n att f{\"{o}}rsl{\aa} funktionalitet.
* Apache kan j{\"{a}}mf{\"{o}}ra sig med ett komersiellt projekt i avseende p{\aa} vad de producerar. {\"{A}}ven om det g{\"{o}}rs som en hobby.
* Utvecklarna har inget direkt {\"{a}}gande {\"{o}}ver moduler i projekt},
author = {Mockus, a. and Fielding, R.T. and Herbsleb, J.},
doi = {10.1109/ICSE.2000.870417},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/Mockus, Fielding, Herbsleb - Unknown - A Case Study of Open Source Software Development The Apache Server(2).pdf:pdf},
isbn = {1-58113-206-9},
issn = {0270-5257},
journal = {ACM. Proceedings of the 21st International Conference on Software Engineering. ICSE 2000, Los Angeles},
keywords = {code ownership,defect density,open source,repair interval,software process},
pages = {263--272},
pmid = {6734866},
title = {{A Case Study of Open Source software Development: the Apache server}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=870417},
year = {2000}
}
@inproceedings{Noll,
abstract = {A growing body of empirical research has examined large, suc-cessful open source software projects such as the Linux kernel, Apache web server, and Mozilla web browser. Do these results extend to small open source efforts involving a handful of devel-opers? A study of the OpenEMR open source electronic medical record project was conducted, with the goal of understanding how requirements are elicited, documented, agreed, and validated in a small open source software project The results show that the ma-jority of features are asserted by developers, based on either their personal experience, or knowledge of users' needs. Relatively few were requested directly by users. Validation and documentation took the form of informal discussions via the project's developer mailing list. These results are consistent with an earlier study of the Firefox web browser, suggesting that there is a common open source requirements approach that is independent of project size.},
annote = {acmdlTitle:(+open +source +software +development)},
author = {Noll, John and Liu, Wei-Ming},
booktitle = {Proceedings of the 3rd International Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development - FLOSS '10},
doi = {10.1145/1833272.1833279},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/Noll, Liu - 2010 - Requirements elicitation in open source software development a case study.pdf:pdf},
isbn = {9781605589787},
keywords = {[Electronic Manuscript],electronic health,electronic medical record,open source software,record,software requirements},
pages = {35--40},
title = {{Requirements elicitation in open source software development: a case study}},
url = {http://portal.acm.org/citation.cfm?doid=1833272.1833279},
year = {2010}
}
@article{Mockus2002a,
abstract = {According to its proponents, open source style software development has the capacity to compete successfully, and perhaps in many cases displace, traditional commercial development methods. In order to begin investigating such claims, we examine data from two major open source projects, the Apache web server and the Mozilla browser. By using email archives of source code change history and problem reports we quantify aspects of developer participation, core team size, code ownership, productivity, defect density, and problem resolution intervals for these OSS projects. We develop several hypotheses by comparing the Apache project with several commercial projects. We then test and refine several of these hypotheses, based on an analysis of Mozilla data. We conclude with thoughts about the prospects for high-performance commercial/open source process hybrids.},
annote = {Snowballed from "Requirements elicitation in open source software development: a case study"},
author = {Mockus, Audris and Fielding, Roy T. and Herbsleb, James D},
doi = {10.1145/567793.567795},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/Mockus, T Fielding, D Herbsleb - 2002 - Two case studies of open source software development Apache and Mozilla.pdf:pdf},
isbn = {1049-331X},
issn = {1049-331X},
journal = {ACM Trans. Softw. Eng. Methodol.},
keywords = {Snowballed},
mendeley-tags = {Snowballed},
number = {3},
pages = {309--346},
title = {{Two case studies of open source software development: Apache and Mozilla}},
url = {http://doi.acm.org/10.1145/567793.567795},
volume = {11},
year = {2002}
}
@inproceedings{Noll2008a,
abstract = {@incollection {\{}Requirements-Acquisition-in-Open-Source-Development-Firefox-20, author = {\{}Noll, John{\}}, affiliation = {\{}Santa Clara University Computer Engineering Department 500 El Camino Real Santa Clara CA 95053 USA{\}}, title = {\{}Requirements Acquisition in Open Source Development: Firefox 2.0{\}}, booktitle = {\{}Open Source Development, Communities and Quality{\}}, series = {\{}IFIP International Federation for Information Processing{\}}, editor = {\{}Russo, Barbara and Damiani, Ernesto and Hissam, Scott and Lundell, Bj{\"{o}}rn and Succi, Giancarlo{\}}, publisher = {\{}Springer Boston{\}}, isbn = {\{}978-0-387-09683-4{\}}, keyword = {\{}Computer Science{\}}, pages = {\{}69-79{\}}, volume = {\{}275{\}}, year = {\{}2008{\}} {\}}},
annote = {Snowballed from Requirements elicitation in open source software development: a case study},
author = {Noll, John},
booktitle = {IFIP International Federation for Information Processing},
doi = {10.1007/978-0-387-09684-1_6},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/Noll - 2008 - Requirements acquisition in open source development Firefox 2.0.pdf:pdf},
isbn = {9780387096834},
issn = {15715736},
keywords = {Innovation,Open source,Requirements elicitation,Snowballed,Software development},
mendeley-tags = {Snowballed},
pages = {69--79},
title = {{Requirements acquisition in open source development: Firefox 2.0}},
volume = {275},
year = {2008}
}
@article{Heck,
abstract = {While requirements for open source projects originate from a variety of sources like e.g. mailing lists or blogs, typically, they eventually end up as feature requests in an issue tracking system. When analyzing how these issue trackers are used for},
annote = {acmdlTitle:(+open +source +development +requirements)},
author = {Heck, Petra and Zaidman, Andy},
doi = {10.1145/2501543.2501550},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/Heck, Zaidman - 2013 - An analysis of requirements evolution in open source projects recommendations for issue trackers.pdf:pdf},
isbn = {9781450323116},
journal = {IWPSE 2013: Proceedings of the 2013 International Workshop on Principles of Software Evolution},
keywords = {feature request,issue tracker,open source},
pages = {43--52},
title = {{An analysis of requirements evolution in open source projects: recommendations for issue trackers}},
url = {http://dl.acm.org/citation.cfm?doid=2501543.2501550{\%}5Cnpapers3://publication/doi/10.1145/2501543.2501550},
year = {2013}
}
@article{Mcgrath,
abstract = {Established best practices in software development tend to assume that a product's intended stakeholders (i.e., users, customers, and clients) are fairly well known and generally accessible. This paper outlines specific issues faced by those who conduct requirements analysis in the context of open source projects in which the user communities are widely distributed. The examples described are drawn from the experience of managing tool development within the Sakai Project [1], a higher education effort to build and share a community source framework for supporting on-line collaboration in academic courses and projects. With a far-flung community of users and developers, this project requires new approaches to eliciting, analyzing, and prioritizing user needs. The issues outlined in this paper are currently being met by a preliminary set of solutions that makes use of web-based project management technologies. These technologies along with some planning and communication strategies help improve the decision-making process involved in deciding whether and how to choose among proposed constraints, use cases, and feature requests. Copyright 2006 ACM.},
annote = {acmdlTitle:(+open +source +development +community)

- diskuterar problematiken som ett prjekt st{\"{a}}lls inf{\"{o}}r n{\"{a}}r det utvecklas av geografiskt spridda utvecklare.
- det st{\aa}r en hel sammanfattning i Filips Assignment 1},
author = {McGrath, O G},
doi = {10.1145/1181216.1181270},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/McGrath - 2006 - Balancing act community and local requirements in an open source development process(2).pdf:pdf},
isbn = {1595934383},
journal = {Proceedings of the 34th annual ACM SIGUCCS fall},
keywords = {higher,open source,requirements process,software development},
pages = {240--244},
title = {{Balancing act: community and local requirements in an open source development process}},
url = {http://dl.acm.org/citation.cfm?id=1181270},
year = {2006}
}
@article{Krishnamurthy2016,
abstract = {The success of the Open Source model of software development depends on the voluntary participation of external developers (the peripheral developers), a group that can have distinct motivations from that of project founders (the core developers). In this study, we examine peripheral developer participation by empirically examining approximately 2,600 open source projects. In particular, we hypothesize that peripheral developer participation is higher when the potential for building reputation by gaining recognition from project stakeholders is higher. We consider recognition by internal stakeholders (such as core developers) and external stakeholders (such as end-users and peers). We find a positive association between peripheral developer participation and the potential of stakeholder recognition after controlling for bug reports, feature requests, and other key factors. Our findings provide important insights for OSS founders and corporate managers for open sourcing or OSS adoption decisions. {\textcopyright} 2016 ACM.},
annote = {ACM: acmdlTitle:(+"open source" + corporate +project)},
author = {Krishnamurthy, Rajiv and Jacob, Varghese and Radhakrishnan, Suresh and Dogan, Kutsal},
doi = {10.1145/2820618},
file = {:Users/Filip/Library/Application Support/Mendeley Desktop/Downloaded/Krishnamurthy, Jacob, Radhakrishnan - 2016 - Peripheral Developer Participation in Open Source Projects An Empirical Analysis(2).pdf:pdf},
issn = {2158656X},
journal = {ACM Transactions on Management Information Systems},
keywords = {Categories and Subject Descriptors,Code ownership,Economics Additional Key Words and Phrases,Management,Software Management General Terms,open source software,project management,software metrics},
number = {4},
pages = {1--31},
title = {{Peripheral Developer Participation in Open Source Projects}},
url = {http://dx.doi.org/10.1145/2820618 http://dl.acm.org/citation.cfm?doid=2869770.2820618},
volume = {6},
year = {2016}
}
@article{Zhou2016,
abstract = {Motivation: Open-source projects are often supported by companies, but such involvement often affects the robust contributor inflow needed to sustain the project and sometimes prompts key contributors to leave. To capture user innovation and to maintain quality of software and productivity of teams, these projects need to attract and retain contributors. Aim: We want to understand and quantify how inflow and retention are shaped by policies and actions of companies in three application server projects. Method: We identified three hybrid projects implementing the same JavaEE specification and used published literature, online materials, and interviews to quantify actions and policies companies used to get involved. We collected project repository data, analyzed affiliation history of project participants, and used generalized linear models and survival analysis to measure contributor inflow and retention. Results: We identified coherent groups of policies and actions undertaken by sponsoring companies as three models of community involvement and quantified tradeoffs between the inflow and retention each model provides. We found that full control mechanisms and high intensity of commercial involvement were associated with a decrease of external inflow and with improved retention. However, a shared control mechanism was associated with increased external inflow contemporaneously with the increase of commercial involvement. Implications: Inspired by a natural experiment, our methods enabled us to quantify aspects of the balance between community and private interests in open- source software projects and provide clear implications for the structure of future open-source communities.},
author = {Zhou, Minghui and Mockus, Audris and Ma, Xiujuan and Zhang, Lu and Mei, Hong},
doi = {10.1145/2876443},
file = {::},
issn = {1049331X},
journal = {ACM Transactions on Software Engineering and Methodology},
keywords = {Hybrid project,TODO,commercial involvement,contributor inflow,contributor retention,extent and intensity of involvement,natural experiment},
mendeley-tags = {TODO},
number = {2},
pages = {1--29},
title = {{Inflow and Retention in OSS Communities with Commercial Involvement}},
url = {http://dx.doi.org/10.1145/2876443 http://dl.acm.org/citation.cfm?doid=2913009.2876443},
volume = {25},
year = {2016}
}
@article{Wnuk,
abstract = {A key component in successfully managing software products is to properly, and in a timely manner, identify and secure competitive advantage by innovation via feature differentiation. Although open source software ({\{}OSS){\}} is not a new idea, several product development companies that operate in a market-driven context have started to use open source solutions as core software components in their products. Adopting open source core components implies a lower degree of control over software development and increased business risk associated with integrating differentiating contributions into the core release stream. Whether and how to adjust the current requirements management practices after the adoption of {\{}OSS{\}} components to fully benefit from the concept of open innovation has not yet been empirically explored. We outline experiences and challenges related to leveraging open innovation via engaging in {\{}OSS{\}} identified during 19 interviews with practitioners occupying different roles in the requirements management process at a large company followed by four validation interviews with other practitioners. We then propose a research agenda for requirements and decision management in the open innovation context and suggest which challenges in requirements engineering open innovation affects.},
annote = {acmdlTitle:(+open +source +development +requirements)},
author = {Wnuk, Krzysztof and Pfahl, Dietmar and Callele, David and Karlsson, Even-Andr{\'{e}}},
doi = {10.1145/2372251.2372301},
file = {::},
isbn = {978-1-4503-1056-7},
issn = {1938-6451},
journal = {Proceedings of the {\{}ACM-IEEE{\}} International Symposium on Empirical Software Engineering and Measurement},
keywords = {case study,open innovation,open source software,software requirements management},
pages = {271--280},
title = {{How Can Open Source Software Development Help Requirements Management Gain the Potential of Open Innovation: An Exploratory Study}},
url = {http://doi.acm.org/10.1145/2372251.2372301},
year = {2012}
}
