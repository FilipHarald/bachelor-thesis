Automatically generated by Mendeley Desktop 1.17.8
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@inproceedings{Noll,
abstract = {A growing body of empirical research has examined large, suc-cessful open source software projects such as the Linux kernel, Apache web server, and Mozilla web browser. Do these results extend to small open source efforts involving a handful of devel-opers? A study of the OpenEMR open source electronic medical record project was conducted, with the goal of understanding how requirements are elicited, documented, agreed, and validated in a small open source software project The results show that the ma-jority of features are asserted by developers, based on either their personal experience, or knowledge of users' needs. Relatively few were requested directly by users. Validation and documentation took the form of informal discussions via the project's developer mailing list. These results are consistent with an earlier study of the Firefox web browser, suggesting that there is a common open source requirements approach that is independent of project size.},
annote = {acmdlTitle:(+open +source +software +development)},
author = {Noll, John and Liu, Wei-Ming},
booktitle = {Proceedings of the 3rd International Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development - FLOSS '10},
doi = {10.1145/1833272.1833279},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Noll, Liu - 2010 - Requirements elicitation in open source software development a case study(3).pdf:pdf},
isbn = {9781605589787},
keywords = {[Electronic Manuscript],electronic health,electronic medical record,open source software,record,software requirements},
pages = {35--40},
title = {{Requirements elicitation in open source software development: a case study}},
url = {http://portal.acm.org/citation.cfm?doid=1833272.1833279},
year = {2010}
}
@article{Zhou2016,
abstract = {Motivation: Open-source projects are often supported by companies, but such involvement often affects the robust contributor inflow needed to sustain the project and sometimes prompts key contributors to leave. To capture user innovation and to maintain quality of software and productivity of teams, these projects need to attract and retain contributors. Aim: We want to understand and quantify how inflow and retention are shaped by policies and actions of companies in three application server projects. Method: We identified three hybrid projects implementing the same JavaEE specification and used published literature, online materials, and interviews to quantify actions and policies companies used to get involved. We collected project repository data, analyzed affiliation history of project participants, and used generalized linear models and survival analysis to measure contributor inflow and retention. Results: We identified coherent groups of policies and actions undertaken by sponsoring companies as three models of community involvement and quantified tradeoffs between the inflow and retention each model provides. We found that full control mechanisms and high intensity of commercial involvement were associated with a decrease of external inflow and with improved retention. However, a shared control mechanism was associated with increased external inflow contemporaneously with the increase of commercial involvement. Implications: Inspired by a natural experiment, our methods enabled us to quantify aspects of the balance between community and private interests in open- source software projects and provide clear implications for the structure of future open-source communities.},
annote = {ACM: acmdTItle:(+"open source" +corporate +project +community)

- Bra f{\"{o}}rklaring av bakgrunden till f{\"{o}}retagen som de har valt, vilka open source modeller som anv{\"{a}}nts, {\aa}rtal d{\aa} projek},
author = {Zhou, Minghui and Mockus, Audris and Ma, Xiujuan and Zhang, Lu and Mei, Hong},
doi = {10.1145/2876443},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Zhou et al. - 2016 - 3 Inflow and Retention in OSS Communities with Commercial Involvement A Case Study of Three Hybrid Projects.pdf:pdf},
issn = {1049331X},
journal = {ACM Transactions on Software Engineering and Methodology},
keywords = {Hybrid project,TODO,commercial involvement,contributor inflow,contributor retention,extent and intensity of involvement,natural experiment},
mendeley-tags = {TODO},
number = {2},
pages = {1--29},
title = {{Inflow and Retention in OSS Communities with Commercial Involvement}},
url = {http://dx.doi.org/10.1145/2876443 http://dl.acm.org/citation.cfm?doid=2913009.2876443},
volume = {25},
year = {2016}
}
@article{Mockus,
abstract = {According to its proponents, open source style software development has the capacity to compete successfully, and perhaps in many cases displace, traditional commercial development methods. In order to begin investigating such claims, we examine the development process of a major open source application, the Apache web server. By using email archives of source code change history and problem reports we quantify aspects of developer participation, core team size, code ownership, productivity, defect density, and problem resolution interval for this OSS project. This analysis reveals a unique process, which performs well on important measures. We conclude that hybrid forms of development that borrow the most effective techniques from both the OSS and commercial worlds may lead to high performance software processes.},
annote = {OBS! Den {\"{a}}r skriven 2000...
- Se r{\"{o}}dmarkerad text f{\"{o}}r guldkorn
- Gr{\"{o}}nmarkerad kan vara bra att relatera till
* De l{\"{a}}gger bl.a. grunden f{\"{o}}r att kombinera komersiell utveckling med OSS
* De som INTE {\"{a}}r core-developers {\"{a}}r mer intresserade av att rapportera problem {\"{a}}n att f{\"{o}}rsl{\aa} funktionalitet.
* Apache kan j{\"{a}}mf{\"{o}}ra sig med ett komersiellt projekt i avseende p{\aa} vad de producerar. {\"{A}}ven om det g{\"{o}}rs som en hobby.
* Utvecklarna har inget direkt {\"{a}}gande {\"{o}}ver moduler i projekt},
author = {Mockus, a. and Fielding, R.T. and Herbsleb, J.},
doi = {10.1109/ICSE.2000.870417},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Mockus, Fielding, Herbsleb - 2000 - A case study of open source software development the Apache server.pdf:pdf},
isbn = {1-58113-206-9},
issn = {0270-5257},
journal = {ACM. Proceedings of the 21st International Conference on Software Engineering. ICSE 2000, Los Angeles},
keywords = {code ownership,defect density,open source,repair interval,software process},
pages = {263--272},
pmid = {6734866},
title = {{A Case Study of Open Source software Development: the Apache server}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=870417},
year = {2000}
}
@article{Mockus2002a,
abstract = {According to its proponents, open source style software development has the capacity to compete successfully, and perhaps in many cases displace, traditional commercial development methods. In order to begin investigating such claims, we examine data from two major open source projects, the Apache web server and the Mozilla browser. By using email archives of source code change history and problem reports we quantify aspects of developer participation, core team size, code ownership, productivity, defect density, and problem resolution intervals for these OSS projects. We develop several hypotheses by comparing the Apache project with several commercial projects. We then test and refine several of these hypotheses, based on an analysis of Mozilla data. We conclude with thoughts about the prospects for high-performance commercial/open source process hybrids.},
annote = {OBS! Den {\"{a}}r skriven 2002...
* j{\"{a}}mf{\"{o}}r OSS med komersiellt drivna projekt
* bra research questions
* antyder att man kan kombinera komersiella projekt med OSS
Snowballed from "Requirements elicitation in open source software development: a case study"},
author = {Mockus, Audris and Fielding, Roy T. and Herbsleb, James D},
doi = {10.1145/567793.567795},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Mockus, Fielding, Herbsleb - 2002 - Two case studies of open source software development Apache and Mozilla.pdf:pdf},
isbn = {1049-331X},
issn = {1049-331X},
journal = {ACM Trans. Softw. Eng. Methodol.},
keywords = {Snowballed},
mendeley-tags = {Snowballed},
number = {3},
pages = {309--346},
title = {{Two case studies of open source software development: Apache and Mozilla}},
url = {http://doi.acm.org/10.1145/567793.567795},
volume = {11},
year = {2002}
}
@inproceedings{Clear,
abstract = {Context: Global Software Engineering (GSE) has become the predominant form of software development for global companies and has given rise to a demand for students trained in GSE. In response, universities are developing courses and curricula around GSE and researchers have begun to disseminate studies of these new approaches. Problem: GSE differs from most other computer science fields, however, in that practice is inseparable from theory. As a result, educators looking to create GSE courses face a daunting task: integrating global practice into the local classroom. Aim: This study aims to ameliorate the very difficult task of teaching GSE by delineating the challenges and providing some recommendations for overcoming them. Method: To meet our aims we pose two research questions ("When teaching GSE to students in Higher Education, what are the (a) challenges, and (b) recommendations for addressing them") and then conduct a systematic literature review (SLR) to determine the answers to these questions. Our SLR follows a carefully designed and validated protocol. Results: We found 82 papers that addressed our research questions. Our findings indicate that in addition to the challenges posed by GSE in general, particular problems arise in educational situations. The majority of these challenges fall into the "global distance" category, though teamwork challenges and people issues (such as trust) also commonly arise. Organizational differences between institutions, differing skill sets between students in different locations, and varying cultural work norms, for example, all operate within educational settings in quite different ways than in professional development teams. Integrating cultural training, conducting teamwork exercises to build trust, and instructor monitoring of team communication are all examples of techniques that have been used successfully by educators according to our review Conclusion: Despite the severity of the challenges in GSE education, many institutions have successfully developed courses and curricula targeting GSE. Indeed, for each of the challenges we have identified in the literature there are numerous recommendations for overcoming them. Instructors can use the recommendations given in this study as a starting point to running successful GSE courses. {\textcopyright} 2015 ACM.},
author = {Clear, Tony T.a and Daniels, M.b Mats and Beecham, Sarah S.c and McDermott, Roger R.d and Barr, John J.e and Oudshoorn, M.f Michael and Savickaite, A.g Airina and Noll, J.c John and Daniels, M.b Mats and McDermott, Roger R.d and Oudshoorn, M.f Michael and Savickaite, A.g Airina and Noll, J.c John and Mahmood, Sajjad and Anwer, Sajid and Alshayeb, Mohammad and Clear, Tony T.a and Daniels, M.b Mats and Beecham, Sarah S.c and McDermott, Roger R.d and Barr, John J.e and Oudshoorn, M.f Michael and Savickaite, A.g Airina and Noll, J.c John and Yin, Robert K and Yang, Chen and Liang, Peng and Avgeriou, Paris},
booktitle = {ITiCSE-WGP 2015 - Proceedings of the 2015 ITiCSE Conference on Working Group Reports},
doi = {10.1145/2858796.2858797},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Clear et al. - 2015 - Challenges and recommendations for the design and conduct of global software engineering courses A systematic revi.pdf:pdf},
isbn = {978-1-4503-4146-2},
issn = {01641212},
keywords = {Agile development,Architecting approach,Software architecture,TODO,allocation,capstone,global software development,global software engineering,international collaboration,open ended group project,systematic literature review,task,teaching and learning,work distribution},
mendeley-tags = {TODO},
pages = {1--39},
pmid = {15283718},
title = {{Challenges and recommendations for the design and conduct of global software engineering courses: A systematic review}},
url = {http://dx.doi.org/10.1145/2858796.2858797 http://dx.doi.org/10.1016/j.jss.2015.09.028{\%}5Cnhttps://www.scopus.com/inward/record.uri?eid=2-s2.0-84964794770{\&}partnerID=40{\&}md5=095842543262ad950b1c4e3e48aa2868{\%}5Cnhttp://doi.acm.org/10.1145/2858796.2858797},
volume = {111},
year = {2015}
}
@article{Krishnamurthy2016,
abstract = {The success of the Open Source model of software development depends on the voluntary participation of external developers (the peripheral developers), a group that can have distinct motivations from that of project founders (the core developers). In this study, we examine peripheral developer participation by empirically examining approximately 2,600 open source projects. In particular, we hypothesize that peripheral developer participation is higher when the potential for building reputation by gaining recognition from project stakeholders is higher. We consider recognition by internal stakeholders (such as core developers) and external stakeholders (such as end-users and peers). We find a positive association between peripheral developer participation and the potential of stakeholder recognition after controlling for bug reports, feature requests, and other key factors. Our findings provide important insights for OSS founders and corporate managers for open sourcing or OSS adoption decisions. {\textcopyright} 2016 ACM.},
annote = {ACM: acmdlTitle:(+"open source" + corporate +project)},
author = {Krishnamurthy, Rajiv and Jacob, Varghese and Radhakrishnan, Suresh and Dogan, Kutsal},
doi = {10.1145/2820618},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Krishnamurthy, Jacob, Radhakrishnan - 2016 - Peripheral Developer Participation in Open Source Projects An Empirical Analysis.pdf:pdf},
issn = {2158656X},
journal = {ACM Transactions on Management Information Systems},
keywords = {Categories and Subject Descriptors,Code ownership,Economics Additional Key Words and Phrases,Management,Software Management General Terms,open source software,project management,software metrics},
number = {4},
pages = {1--31},
title = {{Peripheral Developer Participation in Open Source Projects}},
url = {http://dx.doi.org/10.1145/2820618 http://dl.acm.org/citation.cfm?doid=2869770.2820618},
volume = {6},
year = {2016}
}
@techreport{Goodrick2014,
abstract = {The Office of Research is UNICEF's dedicated research arm. Its prime objectives are to improve international understanding of issues relating to children's rights and to help facilitate full implementation of the Convention on the Rights of the Child across the world. The Office of Research aims to set out a comprehensive framework for research and knowledge within the organization, in support of UNICEF's global programmes and policies, and works with partners to make policies for children evidence-based. Publications produced by the Office are contributions to a global debate on children and child rights issues and include a wide range of opinions. The views expressed are those of the authors and/or editors and are published in order to stimulate further dialogue on impact evaluation methods. They do not necessarily reflect the policies or views of UNICEF. OFFICE OF RESEARCH METHODOLOGICAL BRIEFS UNICEF Office of Research Methodological Briefs are intended to share contemporary research practice, methods, designs, and recommendations from renowned researchers and evaluators. The primary audience is UNICEF staff who conduct, commission or interpret research and evaluation findings to make decisions about programming, policy and advocacy. This brief has undergone an internal peer review.},
annote = {Snowballed from: "Inflow and Retention in OSS Communities with Commercial Involvement: A Case Study of Three Hybrid Projects"},
author = {Goodrick, Delwyn},
booktitle = {Methodological Briefs: Impact Evaluation 9},
file = {::},
title = {{Comparative Case Studies}},
url = {https://www.unicef-irc.org/publications/pdf/brief{\_}9{\_}comparativecasestudies{\_}eng.pdf},
year = {2014}
}
@inproceedings{Noll2008a,
abstract = {@incollection {\{}Requirements-Acquisition-in-Open-Source-Development-Firefox-20, author = {\{}Noll, John{\}}, affiliation = {\{}Santa Clara University Computer Engineering Department 500 El Camino Real Santa Clara CA 95053 USA{\}}, title = {\{}Requirements Acquisition in Open Source Development: Firefox 2.0{\}}, booktitle = {\{}Open Source Development, Communities and Quality{\}}, series = {\{}IFIP International Federation for Information Processing{\}}, editor = {\{}Russo, Barbara and Damiani, Ernesto and Hissam, Scott and Lundell, Bj{\"{o}}rn and Succi, Giancarlo{\}}, publisher = {\{}Springer Boston{\}}, isbn = {\{}978-0-387-09683-4{\}}, keyword = {\{}Computer Science{\}}, pages = {\{}69-79{\}}, volume = {\{}275{\}}, year = {\{}2008{\}} {\}}},
annote = {Snowballed from Requirements elicitation in open source software development: a case study},
author = {Noll, John},
booktitle = {IFIP International Federation for Information Processing},
doi = {10.1007/978-0-387-09684-1_6},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Noll - 2008 - Requirements acquisition in open source development Firefox 2.0.pdf:pdf},
isbn = {9780387096834},
issn = {15715736},
keywords = {Innovation,Open source,Requirements elicitation,Snowballed,Software development},
mendeley-tags = {Snowballed},
pages = {69--79},
title = {{Requirements acquisition in open source development: Firefox 2.0}},
volume = {275},
year = {2008}
}
@article{Author2008,
abstract = {OBJECTIVE To determine the validity of an electronic health record (EHR) in the identification of patients with left ventricular dysfunction in a primary care setting. DESIGN A cross-sectional study. SETTING Nine clinics participating from the Providence Research Network (PRN) comprising 75 physicians serving approximately 200,000 patients. All clinics utilise the Logician EHR for all patient care activities. PATIENTS The study included all PRN patients with an active chart. INTERVENTIONS All patients with a heart failure diagnosis in the problem list were identified by database query. Left ventricular ejection fraction (LVEF) data were identified through query of local cardiology and hospital echocardiography databases. Additional LVEF data were sought in a manual search of paper charts. MEASUREMENTS AND MAIN RESULTS To determine the problem list coding accuracy for a heart failure (HF) diagnosis we evaluated sensitivity, positive predictive value and related derived statistical measures using documented LVEF as the 'gold standard'. Of 205 755 active PRN patients, 1731 were identified with a problem list entry of HF. Based on comparison with documented LVEF, the sensitivity for problem list entry was 43.9{\%} and 54.4{\%} when HF was defined as an LVEF {\textless} or = 55{\%} and {\textless} or = 40{\%}, respectively. CONCLUSION The validity of an EHR problem list entry of HF was poor. The problem list validity could be enhanced through reconciliation with other data sources. Inaccurate EHR problem lists may have clinical consequences, including underprescribing of beneficial therapies.},
archivePrefix = {arXiv},
arxivId = {http://ehis.ebscohost.com/},
author = {Onofrei, Mihai and Hunt, Jacquelyn and Siemienczuk, Joseph and Touchette, Daniel R. and Middleton, Blackford},
doi = {Article},
eprint = {/ehis.ebscohost.com/},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Author et al. - 2008 - Outsourcing to an Unknown Workforce Exploring Opensurcing as a Global Sourcing Exploring Opensourcing as a Glo(2).pdf:pdf},
isbn = {1476-0320 (Print)$\backslash$r1475-9985 (Linking)},
issn = {14760320},
journal = {Informatics in Primary Care},
keywords = {Data quality,Heart failure,Medical record system,Quality improvement},
number = {3},
pages = {139--145},
pmid = {15606986},
primaryClass = {http:},
title = {{A first step towards translating evidence into practice: Heart failure in a community practice-based research network}},
url = {http://www.jstor.org/stable/info/25148845},
volume = {12},
year = {2004}
}
@article{Mcgrath,
abstract = {Established best practices in software development tend to assume that a product's intended stakeholders (i.e., users, customers, and clients) are fairly well known and generally accessible. This paper outlines specific issues faced by those who conduct requirements analysis in the context of open source projects in which the user communities are widely distributed. The examples described are drawn from the experience of managing tool development within the Sakai Project [1], a higher education effort to build and share a community source framework for supporting on-line collaboration in academic courses and projects. With a far-flung community of users and developers, this project requires new approaches to eliciting, analyzing, and prioritizing user needs. The issues outlined in this paper are currently being met by a preliminary set of solutions that makes use of web-based project management technologies. These technologies along with some planning and communication strategies help improve the decision-making process involved in deciding whether and how to choose among proposed constraints, use cases, and feature requests. Copyright 2006 ACM.},
annote = {acmdlTitle:(+open +source +development +community)

- diskuterar problematiken som ett prjekt st{\"{a}}lls inf{\"{o}}r n{\"{a}}r det utvecklas av geografiskt spridda utvecklare.
- det st{\aa}r en hel sammanfattning i Filips Assignment 1},
author = {McGrath, O G},
doi = {10.1145/1181216.1181270},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/McGrath - 2006 - Balancing act community and local requirements in an open source development process.pdf:pdf},
isbn = {1595934383},
journal = {Proceedings of the 34th annual ACM SIGUCCS fall},
keywords = {higher,open source,requirements process,software development},
pages = {240--244},
title = {{Balancing act: community and local requirements in an open source development process}},
url = {http://dl.acm.org/citation.cfm?id=1181270},
year = {2006}
}
@article{DiBonaChrisandOckman1999,
annote = {Snowballed from "Exploring the Structure of Complex Software Designs: An Empirical Study of Open Source and Proprietary Code"},
author = {{DiBona, Chris and Ockman}, Sam},
file = {::},
journal = {O'Reilly Media, Inc.},
title = {{Open Sources: Voices from the Open Source Revolution}},
year = {1999}
}
@article{VonHippel2003,
abstract = {Currently, two models of innovation are prevalent in organization science. The “private investment” model assumes returns to the innovator result from private goods and efficient regimes of intellectual property protection. The “collective action” model assumes that under conditions of market failure, innovators collaborate in order to produce a public good. The phenomenon of open source software development shows that users program to solve their own as well as shared technical problems, and freely reveal their innovations without appropriating private returns from selling the software. In this paper, we propose that open source software development is an exemplar of a compound “private-collective” model of innovation that contains elements of both the private invest- ment and the collective action models and can offer society the “best of both worlds” under many conditions. We describe a new set of research questions this model raises for schol- ars in organization science. We offer some details regarding the types of data available for open source projects in order to ease access for researchers who are unfamiliar with these, and also offer some advice on open source software development processes. conducting empirical studies on open},
annote = {Snowballed from "Exploring the Structure of Complex Software Designs: An Empirical Study of Open Source and Proprietary Code"},
author = {von Hippel, Eric and von Krogh, Georg},
doi = {10.1287/orsc.14.2.209.14992},
file = {::},
isbn = {10477039},
issn = {1047-7039},
journal = {Organization Science},
keywords = {Collective Action,Incentives,Innovation,Open Source},
number = {2},
pages = {209--223},
pmid = {9586553},
title = {{Innovation Model : Issues for Organization Science Open Source Software and the “ Private-Collective ” Innovation Model : Issues for Organization Science}},
url = {http://pubsonline.informs.org/doi/abs/10.1287/orsc.14.2.209.14992},
volume = {14},
year = {2003}
}
@article{Jeppesen,
abstract = {Studies of the sources of innovations have recognized that many innovations are developed by users. However, the fact that firms employ communities of users to strengthen their innovation process has not yet received much attention. In online firm-hosted user communities, users freely reveal innovations to a firm's product platform, which can put the firm in a favorable position (a) because these new product features become available to all users through sharing on a user-to-user basis, or (b) because it allows the firm to pick up the innovations and integrate them in future products and then benefit by selling them to all users. We study the key personal attributes of the individuals responsible for innovations, namely the innovative users, to explain creation of value in this organizational context. The main question is why such users contribute to firm-hosted user communities. Analyzing data derived from multiple sources (interviews, a Web-log, and questionnaires), we find that innovative users are likely to be (i) hobbyists, an attribute that can be assumed to (positively) affect innovators' willingness to share innovations, and (ii) responsive to "firm recognition" as a motivating factor for undertaking innovation, which explains their decision to join the firm's domain. In agreement with earlier studies, we also find that innovative users are likely to be "lead users," an attribute that we assume to affect the quality of user innovation. Whether or not a firm-hosted user community can be turned into an asset for the firm is to a great extent conditional on the issues studied in this paper.},
annote = {Recommended by supervisor Aleksander

Artikeln f{\"{o}}rs{\"{o}}ker svara p{\aa} varf{\"{o}}r anv{\"{a}}ndare bidrar till en "firmas produkt"

Den beskriver {\"{a}}ven hur mycket anv{\"{a}}ndare kan bidra till utvecklingen med innovation. (S{\"{a}}nkta kostnader f{\"{o}}r f{\"{o}}retaget)

Utf{\"{o}}rlig f{\"{o}}rklaring av methodolodgy},
author = {Jeppesen, Lars Bo and Frederiksen, Lars},
doi = {10.1287/orsc.1050.0156},
file = {::},
isbn = {1047-7039},
issn = {1047-7039},
journal = {Organization Science},
keywords = {innovation,user characteristics,user community},
number = {July 2015},
pages = {45--63},
pmid = {235678300004},
title = {{Why do users contribute to firm-hosted user communities? The case of computer-controlled music instruments}},
url = {http://www.jstor.org http://www.jstor.org/stable/25146012 http://www.jstor.org/stable/25146012?seq=1{\&}cid=pdf-reference{\#}references{\_}tab{\_}contents http://www.jstor.org/page/info/about/policies/terms.jsp},
volume = {17},
year = {2006}
}
@article{Crowston2006,
abstract = {Information systems success is one of the most widely used dependent variables in information systems (IS) research, but research on free/libre and open source software (FLOSS) often fails to appropriately conceptualize this important concept. In this article, we reconsider what success means within a FLOSS context. We first review existing models of IS success and success variables used in FLOSS research and assess them for their usefulness, practicality and fit to the FLOSS context. Then, drawing on a theoretical model of group effectiveness in the FLOSS development process, as well as an on-line discussion with developers, we present additional concepts that are central to an appropriate understanding of success for FLOSS. In order to examine the practicality and validity of this conceptual scheme, the second half of our article presents an empirical study that demonstrates operationalizations of the chosen measures and assesses their internal validity. We use data from SourceForge to measure the project's effectiveness in team building, the speed of the project at responding to bug reports and the project's popularity. We conclude by discussing the implications of this study for our proposed extension of IS success in the context of FLOSS development and highlight future directions for research. Copyright {\textcopyright} 2006 John Wiley {\&} Sons, Ltd.},
annote = {Snowballed from "Peripheral Developer Participation in Open Source Projects: An Empirical Analysis"},
author = {Crowston, Kevin and Howison, James and Annabi, Hala},
doi = {10.1002/spip.259},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Crowston, Howison, Annabi - 2006 - Information systems success in free and open source software development Theory and measures.pdf:pdf},
isbn = {1099-1670},
issn = {10774866},
journal = {Software Process Improvement and Practice},
keywords = {Concept development,Free/libre open source software,Information systems success,Survival analysis},
number = {2},
pages = {123--148},
title = {{Information systems success in free and open source software development: Theory and measures}},
volume = {11},
year = {2006}
}
@article{Crowston,
abstract = {We review the empirical research on Free/Libre and Open-Source Software (FLOSS) development and assess the state of the literature.We develop a framework for organizing the literature based on the input-mediatoroutput- input (IMOI) model from the small groups literature. We present a quantitative summary of articles selected for the review and then discuss findings of this literature categorized into issues pertaining to inputs (e.g., member characteristics, technology use, and project characteristics), processes (software development practices, social processes, and firm involvement practices), emergent states (e.g., social states and taskrelated states), and outputs (e.g. team performance, FLOSS implementation, and project evolution). Based on this review, we suggest topics for future research, as well as identify methodological and theoretical issues for future inquiry in this area, including issues relating to sampling and the need for more longitudinal studies.},
annote = {acmdlTitle:(+open +source)

Litteraturstudie p{\aa} FOSS, motiverar till att corp. vs. comm. b{\"{o}}r utforskas.},
author = {Crowston, Kevin and Wei, Kangning and Howison, James and Wiggins, Andrea},
doi = {10.1145/2089125.2089127},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Crowston et al. - 2012 - FreeLibre open-source software development.pdf:pdf},
isbn = {0360-0300},
issn = {03600300},
journal = {ACM Computing Surveys},
keywords = {Computer-mediated communication,Development,Distributed work,Free/Libre open-source software},
number = {2},
pages = {1--35},
title = {{Free/Libre open-source software development}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79955134463{\&}partnerID=tZOtx3y1},
volume = {44},
year = {2012}
}
@book{RobertK1994,
address = {London},
annote = {Snowballed from: "Inflow and Retention in OSS Communities with Commercial Involvement: A Case Study of Three Hybrid Projects"
- L{\"{a}}nk till mah biblotek, s{\"{o}}k v{\"{a}}g f{\"{o}}r att p{\aa}visa att boken finns. http://eds.a.ebscohost.com/eds/results?sid=7e0fb35b-8358-466d-aec8-a6384745552b{\%}40sessionmgr4006{\&}vid=0{\&}hid=4202{\&}bquery=Case+study+research{\%}3a+Design+and+methods{\&}bdata=JnR5cGU9MSZzaXRlPWVkcy1saXZl

- Describes the design and methods that can be used in a case study and which one to choose},
author = {{Robert K}, Yin},
booktitle = {Book},
edition = {5. ed.},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - Unknown - OPM110045(2).pdf:pdf},
isbn = {9781452242569},
pages = {282},
publisher = {SAGE, cop. 2014.},
title = {{Case Study Research: Design and Methods}},
url = {http://eds.a.ebscohost.com/eds/detail/detail?vid=1{\&}sid=7e0fb35b-8358-466d-aec8-a6384745552b{\%}40sessionmgr4006{\&}hid=4202{\&}bdata=JnNpdGU9ZWRzLWxpdmU{\%}3D{\#}AN=malmo.b1774896{\&}db=cat05074a},
volume = {5. ed.},
year = {2013}
}
@article{Curtis1986,
abstract = {Research issues concerning human interaction with computers have become crucial because of dramatic increases in the number of computer users who have no formal mathematical, engineering, or computer science training. This review focuses on the state of the art in Software Psychology--the study of human factors in computer systems. One area of software psychology, the psychology of programming, is picked for an in-depth discussion of research results. This area was selected for its interest to the readers of the PROCEEDINGS OF THE IEEE. The review then discusses the methodological issues involved in performing experimental research in software psychology. Future trends are discussed both for the programming research reviewed here and for the whole field of software psychology. The conclusions identify multidisciplinary training and research as critical to further progress in this field.},
annote = {Snowballed from: "Inflow and Retention in OSS Communities with Commercial Involvement: A Case Study of Three Hybrid Projects"},
author = {Curtis, Bill and Soloway, Elliot M. and Brooks, Ruven E. and Black, John B. and Ehrlich, Kate and Ramsey, H. Rudy},
doi = {10.1109/PROC.1986.13596},
file = {::},
issn = {15582256},
journal = {Proceedings of the IEEE},
number = {8},
pages = {1092--1106},
title = {{Software Psychology: The Need for an Interdisciplinary Program}},
volume = {74},
year = {1986}
}
@article{Maccormack2006,
abstract = {This paper reports data from a study that seeks to characterize the differences in design structure between complex software products. We use design structure matrices (DSMs) to map dependencies between the elements of a design and define and define metrics that allow us to compare the structures of different designs. We use these metrics to compare the architectures of two software products--the Linux operating system and the Mozilla Web browser--that were developed via contrasting modes of organization: specifically, open source versus proprietary development. We then track the evolution of Mozilla, paying attention to a purposeful "redesign" effort undertaken with the intention of making the product more "modular." We find significant differences in structure between Linux and the first version of Mozilla, suggesting that Linux had a more modular architecture. Yet we also find that the redesign of Mozilla resulted in an architecture that was significantly more modular than that of its predecessor and, indeed, than that of Linux. Our results, while exploratory, are consistent with a view that different modes of organization are associated with designs that possess different structures. However, they also suggest that purposeful managerial actions can have a significant impact in adapting a design's structure. This latter result is important given recent moves to release proprietary software into the public domain. These moves are likely to fail unless the product possesses an "architecture for participation".},
annote = {Snowballed from "Why do users contribute to firm-hosted user communities? The case of computer-controlled music instruments"

F{\"{o}}rkalrar att OSS {\"{a}}r enkelt att analysera.},
author = {MacCormack, Alan and Rusnak, John and Baldwin, Carliss Y},
doi = {10.1287/mnsc.1060.0552},
file = {::},
isbn = {00251909},
issn = {0025-1909},
journal = {Management Science},
keywords = {2 revisions,2004,accepted by eric von,architecture,authors 4 months for,design,guest editors,hippel and georg von,history,krogh,modularity,open source,paper was with the,product development,received august 23,software,this},
number = {7},
pages = {1015--1030},
pmid = {21517585},
title = {{Exploring the Structure of Complex Software Designs: An Empirical Study of Open Source and Proprietary Code}},
url = {http://www.jstor.org/stable/20110577 http://about.jstor.org/terms},
volume = {52},
year = {2006}
}
@article{Kernel,
abstract = {We propose a new model of knowledge creation in purposeful, loosely coordinated, distributed systems, as an alternative to a firm-based one.Specifically, using the case of the Linux kernel development project, we build a model of community-based, evolutionary knowledge creation to study how thousands of talented volunteers, dispersed across organizational and geo- graphical boundaries, collaborate via the Internet to produce a knowledge-intensive, innovative product of high quality.By comparing and contrasting the Linux model with the tradi- tional/commercial model of software development and firm- based knowledge creation efforts, we show how the proposed model of knowledge creation expands beyond the boundary of the firm.Our model suggests that the product develop- ment process can be effectively organized as an evolutionary process of learning driven by criticism and error correction. We conclude by offering some theoretical implications of our community-based model of knowledge creation for the litera- ture of organizational learning, community life, and the uses of knowledge in society.},
annote = {Snowballed from "Free/Libre open-source software development"},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Lee, Gwendolyn K and Cole, Robert E},
doi = {10.1287/orsc.14.6.633.24866},
eprint = {arXiv:1011.1669v3},
file = {::},
isbn = {1047-7039},
issn = {1047-7039},
journal = {Organization Science},
keywords = {(Open Source Software Development,Innovation,Knowledge Creation)},
number = {6},
pages = {633--649},
pmid = {18536648},
title = {{From a Firm-Based to a Community-Based Model of Knowledge Creation: The Case of the Linux Kernel Development}},
url = {http://www.jstor.org/stable/4135125 http://www.jstor.org/stable/4135125?seq=1{\&}cid=pdf-reference{\#}references{\_}tab{\_}contents http://about.jstor.org/terms http://dx.doi.org/10.1287/orsc.14.6.633.24866{\%}5Cnhttp://pubsonline.informs.org/doi/abs/10.1287/orsc.14.6.6},
volume = {14},
year = {2003}
}
@article{Wnuk,
abstract = {A key component in successfully managing software products is to properly, and in a timely manner, identify and secure competitive advantage by innovation via feature differentiation. Although open source software ({\{}OSS){\}} is not a new idea, several product development companies that operate in a market-driven context have started to use open source solutions as core software components in their products. Adopting open source core components implies a lower degree of control over software development and increased business risk associated with integrating differentiating contributions into the core release stream. Whether and how to adjust the current requirements management practices after the adoption of {\{}OSS{\}} components to fully benefit from the concept of open innovation has not yet been empirically explored. We outline experiences and challenges related to leveraging open innovation via engaging in {\{}OSS{\}} identified during 19 interviews with practitioners occupying different roles in the requirements management process at a large company followed by four validation interviews with other practitioners. We then propose a research agenda for requirements and decision management in the open innovation context and suggest which challenges in requirements engineering open innovation affects.},
annote = {acmdlTitle:(+open +source +development +requirements)},
author = {Wnuk, Krzysztof and Pfahl, Dietmar and Callele, David and Karlsson, Even-Andr{\'{e}}},
doi = {10.1145/2372251.2372301},
file = {::},
isbn = {978-1-4503-1056-7},
issn = {1938-6451},
journal = {Proceedings of the {\{}ACM-IEEE{\}} International Symposium on Empirical Software Engineering and Measurement},
keywords = {case study,open innovation,open source software,software requirements management},
pages = {271--280},
title = {{How Can Open Source Software Development Help Requirements Management Gain the Potential of Open Innovation: An Exploratory Study}},
url = {http://doi.acm.org/10.1145/2372251.2372301},
year = {2012}
}
@article{Heck,
abstract = {While requirements for open source projects originate from a variety of sources like e.g. mailing lists or blogs, typically, they eventually end up as feature requests in an issue tracking system. When analyzing how these issue trackers are used for},
annote = {acmdlTitle:(+open +source +development +requirements)},
author = {Heck, Petra and Zaidman, Andy},
doi = {10.1145/2501543.2501550},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Heck, Zaidman - 2013 - An analysis of requirements evolution in open source projects recommendations for issue trackers.pdf:pdf},
isbn = {9781450323116},
journal = {IWPSE 2013: Proceedings of the 2013 International Workshop on Principles of Software Evolution},
keywords = {feature request,issue tracker,open source},
pages = {43--52},
title = {{An analysis of requirements evolution in open source projects: recommendations for issue trackers}},
url = {http://dl.acm.org/citation.cfm?doid=2501543.2501550{\%}5Cnpapers3://publication/doi/10.1145/2501543.2501550},
year = {2013}
}
@book{Jansson2015,
annote = {From: Google Scholar 
Terms: "open source + konventionell + project + management + case study "},
author = {Jansson, Tomas},
file = {:Users/teddyandersson/Library/Application Support/Mendeley Desktop/Downloaded/Jansson - Unknown - Agila projektledningsmetoder och motivation.pdf:pdf},
isbn = {9789170636202},
title = {{Agila projektledningsmetoder och motivation}},
year = {2015}
}
